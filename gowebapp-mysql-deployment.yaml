apiVersion: apps/v1
#TODO: define the kind of object as Deployment
kind: Deployment
metadata: 
  #TODO: give the deployment a name name: gowebapp-mysql
  name: gowebapp-mysql
  labels:
    #TODO: give the Deployment a label: app: gowebapp-mysql
    #TODO: give the Deployment a label: tier: backend
    app: gowebapp-mysql
    tier: backend
spec:
  #TODO: set replicas to 1
  replicas: 1
  strategy: 
    #TODO: define the type of strategy as Recreate
    type: Recreate
  selector:
    matchLabels:
      app: gowebapp-mysql
      tier: backend
  template:
    metadata:
      labels:
        app: gowebapp-mysql
        tier: backend
    spec:
      containers:
      - name: gowebapp-mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: mypassword
        image: gowebapp-mysql:v1 
        ports:
        - #TODO: define the container port as 3306
          containerPort: 3306
        # Liveness probe for TCP port 3306 
        livenessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 1
        # Readiness probe for exec sql command on a db table
        readinessProbe:
          exec:
            command: ["mysql", "-uroot", "-pmypassword", "-e", "use gowebapp; select count(*) from user"]
          initialDelaySeconds: 25
          periodSeconds: 10
          timeoutSeconds: 1            
          
          
          
          
##### TO DYNAMICALLY GET A LISTING OF ALL PODS IN A LABEL
##### kubectl get pods -l "tier=somename" -o jsonpath='{.items[i].metadata.name}'

#### FOR SPECIFIC OUTPUT
#### kubectl get pods -l "tier=somename" | grep 'someoutput\|anotheroutput'
